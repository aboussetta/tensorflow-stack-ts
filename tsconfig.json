{
    "compilerOptions": {
        "baseUrl": ".",
        "outDir": "build/debug",
        "module": "esnext",
        "target": "es6",
        "lib": ["dom", "esnext"],
        "allowJs": true,
        "jsx": "react",
        "moduleResolution": "node",
        "rootDir": ".",
        // "forceConsistentCasingInFileNames": true,
        // **** "suppressImplicitAnyIndexErrors": true,
        "strict": true,
        /* Enable all strict type-checking options. */
        // "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
        // "strictNullChecks": true,                 /* Enable strict null checks. */
        // "strictFunctionTypes": true,              /* Enable strict checking of function types. */
        // "strictPropertyInitialization": true,     /* Enable strict checking of property initialization in classes. */
        // "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */
        // "alwaysStrict": true,                     /* Parse in strict mode and emit "use strict" for each source file. */
        /* Additional Checks */
        "noUnusedLocals": true,
        /* Report errors on unused locals. */
        "noUnusedParameters": true,
        /* Report errors on unused parameters. */
        "noImplicitReturns": true,
        /* Report error when not all code paths in function return a value. */
        "noFallthroughCasesInSwitch": true,
        /* Report errors for fallthrough cases in switch statement. */
        "typeRoots": ["node_modules/@types"],
        /* List of folders to include type definitions from. */
        "types": ["jest", "node"],
        /* Type declaration files to be included in compilation. */
        "allowSyntheticDefaultImports": true,
        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true,
        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        // "skipLibCheck": true,                 /*  work with Jest framework. Webpack failures: The Jestâ€™s file definitions miss the Set class*/

        /* Source Map Options */
        "sourceMap": true,
        // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

        /* Experimental Options */
        "experimentalDecorators": true,
        /* Enables experimental support for ES7 decorators. */
        "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */
    },
    "exclude": [
        "client",
        "node_modules",
        "build",
        "scripts",
        "acceptance-tests",
        "webpack",
        "jest",
        "src/setupTests.ts"
    ]
}